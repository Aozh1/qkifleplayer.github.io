let primaryTouchId=null,mouseCaptureTarget=null;function definePointerCapture(){Element.prototype.setPointerCapture=Element.prototype.setCapture,Element.prototype.releasePointerCapture=Element.prototype.releaseCapture}function addMouseToPointerListener(e,t,n){e.addEventListener(t,e=>{let o=new MouseEvent(n,e);o.pointerId=1,o.isPrimary=!0,o.pointerType="mouse",o.width=1,o.height=1,o.tiltX=0,o.tiltY=0,"buttons"in e&&0!==e.buttons?o.pressure=.5:o.pressure=0;let r=e.target;null!==mouseCaptureTarget&&(r=mouseCaptureTarget,"mouseup"===t&&(mouseCaptureTarget=null)),r.dispatchEvent(o),o.defaultPrevented&&e.preventDefault()})}function addTouchToPointerListener(e,t,n){e.addEventListener(t,e=>{const o=e.changedTouches,r=o.length;for(let i=0;i<r;i++){let r=new CustomEvent(n,{bubbles:!0,cancelable:!0});r.ctrlKey=e.ctrlKey,r.shiftKey=e.shiftKey,r.altKey=e.altKey,r.metaKey=e.metaKey;const u=o.item(i);r.clientX=u.clientX,r.clientY=u.clientY,r.screenX=u.screenX,r.screenY=u.screenY,r.pageX=u.pageX,r.pageY=u.pageY;const a=u.target.getBoundingClientRect();r.offsetX=u.clientX-a.left,r.offsetY=u.clientY-a.top,r.pointerId=1+u.identifier,r.button=0,r.buttons=1,r.movementX=0,r.movementY=0,r.region=null,r.relatedTarget=null,r.x=r.clientX,r.y=r.clientY,r.pointerType="touch",r.width=1,r.height=1,r.tiltX=0,r.tiltY=0,r.pressure=1,"touchstart"===t&&null===primaryTouchId&&(primaryTouchId=u.identifier),r.isPrimary=u.identifier===primaryTouchId,"touchend"===t&&r.isPrimary&&(primaryTouchId=null),e.target.dispatchEvent(r),r.defaultPrevented&&e.preventDefault()}})}"PointerEvent"in window||(definePointerCapture(),"TouchEvent"in window||(addMouseToPointerListener(document,"mousedown","pointerdown"),addMouseToPointerListener(document,"mousemove","pointermove"),addMouseToPointerListener(document,"mouseup","pointerup")),addTouchToPointerListener(document,"touchstart","pointerdown"),addTouchToPointerListener(document,"touchmove","pointermove"),addTouchToPointerListener(document,"touchend","pointerup"));